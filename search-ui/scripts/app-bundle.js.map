{"version":3,"sources":["app.js","contact-detail.js","contact-list.js","environment.js","main.js","messages.js","no-selection.js","utility.js","web-api.js","resources/index.js","resources/elements/loading-indicator.js","/Users/loctanvo/Projects/aurelia-contact-manager/search-ui/src/app.html","/Users/loctanvo/Projects/aurelia-contact-manager/search-ui/src/styles.css","/Users/loctanvo/Projects/aurelia-contact-manager/search-ui/src/contact-detail.html","/Users/loctanvo/Projects/aurelia-contact-manager/search-ui/src/contact-list.html","/Users/loctanvo/Projects/aurelia-contact-manager/search-ui/src/no-selection.html"],"names":["App","inject","api","configureRouter","config","router","title","map","route","moduleId","name","ContactDetail","ea","activate","params","routeConfig","getContactDetails","id","then","contact","navModel","setTitle","firstName","originalContact","JSON","parse","stringify","publish","save","saveContact","canDeactivate","result","confirm","lastName","isRequesting","ContactList","contacts","subscribe","select","msg","found","find","x","Object","assign","created","getContactList","selectedId","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","ContactUpdated","ContactViewed","NoSelection","message","areEqual","obj1","obj2","keys","every","key","hasOwnProperty","latency","getId","email","phoneNumber","WebAPI","setTimeout","results","resolve","filter","instance","index","indexOf","push","globalResources","nprogress","LoadingIndicator","defaultValue","on","loadingChanged","newValue","done"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { WebAPI } from './web-api';\n\nexport class App {\n    static inject() { return [WebAPI]; }\n\n    constructor(api) {\n        this.api = api;\n    }\n\n    configureRouter(config, router) {\n        config.title = 'Contacts';\n        config.map([\n            { route: '', moduleId: 'no-selection', title: 'Select' },\n            { route: 'contacts/:id', moduleId: 'contact-detail', name: 'contacts' }\n        ]);\n\n        this.router = router;\n    }\n}","import { EventAggregator } from 'aurelia-event-aggregator';\nimport { WebAPI } from './web-api';\nimport { ContactUpdated, ContactViewed } from './messages';\nimport { areEqual } from './utility';\n\nexport class ContactDetail {\n    static inject = [WebAPI, EventAggregator];\n\n    constructor(api, ea) {\n        this.api = api;\n        this.ea = ea;\n    }\n\n    activate(params, routeConfig) {\n        this.routeConfig = routeConfig;\n\n        return this.api.getContactDetails(params.id).then(contact => {\n            this.contact = contact;\n            this.routeConfig.navModel.setTitle(contact.firstName);\n            this.originalContact = JSON.parse(JSON.stringify(contact));\n            this.ea.publish(new ContactViewed(this.contact));\n        });\n    }\n\n    get canSave() {\n        return this.contact.firstName && this.contact.lastName && !this.api.isRequesting;\n    }\n\n    save() {\n        this.api.saveContact(this.contact).then(contact => {\n            this.contact = contact;\n            this.routeConfig.navModel.setTitle(contact.firstName);\n            this.originalContact = JSON.parse(JSON.stringify(contact));\n            this.ea.publish(new ContactUpdated(this.contact));\n        });\n    }\n\n    canDeactivate() {\n        if (!areEqual(this.originalContact, this.contact)) {\n            let result = confirm('You have unsaved changes. Are you sure you wish to leave?');\n\n            if (!result) {\n                this.ea.publish(new ContactViewed(this.contact));\n            }\n\n            return result;\n        }\n\n        return true;\n    }\n}","import { EventAggregator } from 'aurelia-event-aggregator';\nimport { WebAPI } from './web-api';\nimport { ContactUpdated, ContactViewed } from './messages';\n\nexport class ContactList {\n    static inject = [WebAPI, EventAggregator];\n\n    constructor(api, ea) {\n        this.api = api;\n        this.contacts = [];\n\n        ea.subscribe(ContactViewed, msg => this.select(msg.contact));\n        ea.subscribe(ContactUpdated, msg => {\n            let id = msg.contact.id;\n            let found = this.contacts.find(x => x.id === id);\n            Object.assign(found, msg.contact);\n        });\n    }\n\n    created() {\n        this.api.getContactList().then(contacts => this.contacts = contacts);\n    }\n\n    select(contact) {\n        this.selectedId = contact.id;\n        return true;\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class ContactUpdated {\n    constructor(contact) {\n        this.contact = contact;\n    }\n}\n\nexport class ContactViewed {\n    constructor(contact) {\n        this.contact = contact;\n    }\n}","export class NoSelection {\n    constructor() {\n        this.message = \"Please Select a Contact.\";\n    }\n}","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","let latency = 200;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet contacts = [\n  {\n    id:getId(),\n    firstName:'John',\n    lastName:'Tolkien',\n    email:'tolkien@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Clive',\n    lastName:'Lewis',\n    email:'lewis@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Owen',\n    lastName:'Barfield',\n    email:'barfield@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Charles',\n    lastName:'Williams',\n    email:'williams@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Roger',\n    lastName:'Green',\n    email:'green@inklings.com',\n    phoneNumber:'867-5309'\n  }\n];\n\nexport class WebAPI {\n  isRequesting = false;\n  \n  getContactList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = contacts.map(x =>  { return {\n          id:x.id,\n          firstName:x.firstName,\n          lastName:x.lastName,\n          email:x.email\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getContactDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = contacts.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  saveContact(contact){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(contact));\n        let found = contacts.filter(x => x.id == contact.id)[0];\n\n        if(found){\n          let index = contacts.indexOf(found);\n          contacts[index] = instance;\n        }else{\n          instance.id = getId();\n          contacts.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}\n","export function configure(config) {\n    config.globalResources(['./elements/loading-indicator']);\n}","import * as nprogress from 'nprogress';\nimport { bindable, noView, decorators } from 'aurelia-framework';\n\nexport let LoadingIndicator = decorators(\n    noView(['nprogress/nprogress.css']),\n    bindable({ name: 'loading', defaultValue: false })\n).on(class {\n    loadingChanged(newValue) {\n        if (newValue) {\n            nprogress.start();\n        } else {\n            nprogress.done();\n        }\n    }\n});",null,null,null,null,null],"sourceRoot":"../src"}